@host = localhost:3000
@path = /customer/queue

### Success
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 1234567890,
    "queue_id": "QUEUE12345"
}

###
<!--
Test Scenario: Join Queue

Expected Outcome:
console: 'Joined Queue'
success response: status: 201 
-->

//-----------------------------------------------------------//

### Success - multiple people joining the queue
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 1000000001,
    "queue_id": "QUEUE12345"
}

###
<!--
Test Scenario: Multiple people joining queue

Expected Outcome:
console: 'Joined Queue'
success response: status: 201 
-->

//-----------------------------------------------------------//

### Success - customer_id minimum
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 1000000000,
    "queue_id": "QUEUE12345"
}

###
<!--
Test Scenario: Join Queue Customer ID minimum

Expected Outcome:
console: 'Joined Queue'
success response: status: 201 
-->

//-----------------------------------------------------------//

### Success - customer_id maximum
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 9999999999,
    "queue_id": "QUEUE12345"
}

###
<!--
Test Scenario: Join Queue Customer ID Maximum

Expected Outcome:
console: 'Joined Queue'
success response: status: 201 
-->

//-----------------------------------------------------------//

### Success - queue_id numeric only
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 9999999999,
    "queue_id": "1234567890"
}

###
<!--
Test Scenario: Join Queue Queue ID numberic only

Expected Outcome:
console: 'Joined Queue'
success response: status: 201 
-->

//-----------------------------------------------------------//

### Success - queue_id alphabets only
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 9999999999,
    "queue_id": "QUEUEABCDE"
}

###
<!--
Test Scenario: Join Queue Queue ID alphabets only

Expected Outcome:
console: 'Joined Queue'
success response: status: 201 
-->

//-----------------------------------------------------------//

### Error - Queue Id non-existent
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 9999999999,
    "queue_id": "ABCDEABCDE"
}

###
<!--
Test Scenario: Error Queue ID non-existent

Expected Outcome:
console: 'Queue ID non-existent'
error response: 
{
  "message": "Queue ID provided is non existent",
  "status": 404,
  "code": "UNKNOWN_QUEUE"
} 
-->

//-----------------------------------------------------------//

### Error - Queue Id not activated
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 9999999999,
    "queue_id": "QUEUE12346"
}

###
<!--
Test Scenario: Error Queue not activated

Expected Outcome:
console: 'Queue is not active'
error response: 
{
  "message": "Queue is inactive",
  "status": 422,
  "code": "INACTIVE_QUEUE"
}
-->

//-----------------------------------------------------------//

### Error in parameter, customer_id, less than 10 digits
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 123456789,
    "queue_id": "QUEUE12345"
}

###
<!--
Test Scenario: Customer ID less than 10 digits

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//

### Error in parameter, customer_id, more than 10 digits
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 12345678901,
    "queue_id": "QUEUE12345"
}

###
<!--
Test Scenario: Customer ID more than 10 digits

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//

### Error in parameter, customer_id, not numeric
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": "abcdefghij",
    "queue_id": "QUEUE12345"
}

###
<!--
Test Scenario: Customer ID not numeric

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//

### Error in parameter, customer_id, illegal Characters
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": "123456789@",
    "queue_id": "QUEUE12345"
}

###
<!--
Test Scenario: Customer ID illegal characters

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//

### Error in parameter, queue_id, less than 10 alphanumeric
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 1234567890,
    "queue_id": "QUEUE1234"
}

###
<!--
Test Scenario: Queue ID less than 10 digits

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//

### Error in parameter, queue_id, more than 10 alphanumeric
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 1234567890,
    "queue_id": "QUEUE123456"
}

###
<!--
Test Scenario: Queue ID more than 10 alphanumeric

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//

### Error in parameter, queue_id, illegal characters
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 1234567890,
    "queue_id": "QUEUE1234@"
}

###
<!--
Test Scenario: Queue ID illegal characters

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//

### Error in parameter, queue_id, not a string
POST http://{{host}}{{path}} HTTP/1.1
Content-Type: application/json

{
    "customer_id": 1234567890,
    "queue_id": 1234567890
}

###
<!--
Test Scenario: Queue ID not a string

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//