@host = localhost:3000
@path = /company/queue

### Success
PUT http://{{host}}{{path}}?queue_id=QUEUE12345 HTTP/1.1
Content-Type: application/json

{
    "status": "ACTIVATE"
}

###
<!--
Test Scenario: Activate Queue

Expected Outcome:
console: 'Queue updated sucessfully'
success response: status: 200 
-->

//-----------------------------------------------------------//

### Success - queue_id number only
PUT http://{{host}}{{path}}?queue_id=1234567890 HTTP/1.1
Content-Type: application/json

{
    "status": "ACTIVATE"
}

###
<!--
Test Scenario: Activate Queue Queue_id number only

Expected Outcome:
console: 'Queue updated sucessfully'
success response: status: 200 
-->

//-----------------------------------------------------------//

### Success - queue_id alphabet only
PUT http://{{host}}{{path}}?queue_id=QUEUEABCDE HTTP/1.1
Content-Type: application/json

{
    "status": "ACTIVATE"
}

###
<!--
Test Scenario: Activate Queue Queue_id alphabet only

Expected Outcome:
console: 'Queue updated sucessfully'
success response: status: 200 
-->

//-----------------------------------------------------------//

### Success - activated remains activated
PUT http://{{host}}{{path}}?queue_id=QUEUE12345 HTTP/1.1
Content-Type: application/json

{
    "status": "ACTIVATE"
}

###
<!--
Test Scenario: Activate Queue which is already active

Expected Outcome:
console: 'Queue updated sucessfully'
success response: status: 200 
-->

//-----------------------------------------------------------//

### Success - Deactivate
PUT http://{{host}}{{path}}?queue_id=QUEUE12345 HTTP/1.1
Content-Type: application/json

{
    "status": "DEACTIVATE"
}

###
<!--
Test Scenario: Deactivate Queue

Expected Outcome:
console: 'Queue updated sucessfully'
success response: status: 200 
-->

//-----------------------------------------------------------//

### Success - deactivated remains deactivated
PUT http://{{host}}{{path}}?queue_id=QUEUE12345 HTTP/1.1
Content-Type: application/json

{
    "status": "DEACTIVATE"
}

###
<!--
Test Scenario: Deactivate Queue which already deactivate

Expected Outcome:
console: 'Queue updated sucessfully'
success response: status: 200 
-->

//-----------------------------------------------------------//

### Error - queue_id not found
PUT http://{{host}}{{path}}?queue_id=QUEUE00000 HTTP/1.1
Content-Type: application/json

{
    "status": "ACTIVATE"
}

###
<!--
Test Scenario: Queue Id non existent

Expected Outcome:
console: 'Queue ID non-existent'
error response: 
{
  "message": "Queue ID provided is non existent",
  "status": 404,
  "code": "UNKNOWN_QUEUE"
}
-->

//-----------------------------------------------------------//

### Error - queue_id less than 10 digits
PUT http://{{host}}{{path}}?queue_id=QUEUE1234 HTTP/1.1
Content-Type: application/json

{
    "status": "ACTIVATE"
}

###
<!--
Test Scenario: Queue Id less than 10 digits

Expected Outcome:
console: 'Invalid Query String'
error response: 
{
  "message": "Query is invalid",
  "status": 400,
  "code": "INVALID_QUERY_STRING"
}
-->

//-----------------------------------------------------------//

### Error - queue_id less more 10 digits
PUT http://{{host}}{{path}}?queue_id=QUEUE123456 HTTP/1.1
Content-Type: application/json

{
    "status": "ACTIVATE"
}

###
<!--
Test Scenario: Queue Id more than 10 digits

Expected Outcome:
console: 'Invalid Query String'
error response: 
{
  "message": "Query is invalid",
  "status": 400,
  "code": "INVALID_QUERY_STRING"
}
-->

//-----------------------------------------------------------//

### Error - queue_id not alphanumeric
PUT http://{{host}}{{path}}?queue_id=QUEUE1234@ HTTP/1.1
Content-Type: application/json

{
    "status": "ACTIVATE"
}

###
<!--
Test Scenario: Queue Id not alphanumeric

Expected Outcome:
console: 'Invalid Query String'
error response: 
{
  "message": "Query is invalid",
  "status": 400,
  "code": "INVALID_QUERY_STRING"
}
-->

//-----------------------------------------------------------//

### Error - Status not DEACTIVATE or ACTIVATE
PUT http://{{host}}{{path}}?queue_id=QUEUE12345 HTTP/1.1
Content-Type: application/json

{
    "status": "DACTIVATE"
}

###
<!--
Test Scenario: Status not DEACTIVATE or ACTIVATE

Expected Outcome:
console: 'Invalid JSON Body'
error response: 
{
  "message": "Input is invalid",
  "status": 400,
  "code": "INVALID_JSON_BODY"
}
-->

//-----------------------------------------------------------//
